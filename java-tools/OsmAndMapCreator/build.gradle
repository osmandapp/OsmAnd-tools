jar {
	doFirst {
		manifest {
			attributes('Main-Class': project.getProperty('mainClassAttribute'),
				   'Class-Path': configurations.runtimeClasspath.collect { 'lib/'+it.getName() }.join(' ')
				   )
		}
	}
}


task collectFonts(type: Sync) {
	from("../../../resources/rendering_styles/fonts/")
	into "fonts/"	
}


task downloadCoreJni(type: Download)  {
		src 'https://creator.osmand.net/binaries/amd64-linux-clang/OsmAndCore_JavaSample1.jar'
		dest 'lib-gl/OsmAndCore_jni.jar'
		onlyIfModified true
}

// https://builder.osmand.net/binaries/amd64-linux-clang/libOsmAndCoreWithJNI_standalone.so lib-native/
// https://builder.osmand.net/binaries/amd64-linux-clang/libOsmAndCore_ResourcesBundle_shared.so lib-native/


task buildDistribution(type: Zip) {
	dependsOn jar
	// from(configurations.runtimeClasspath.allArtifacts.files) {
	// 	rename { it.contains("OsmAnd") ? it.replace("-master-snapshot", '') : it }
	// //	into '.'
	// }
	from('build/libs/OsmAndMapCreator-master-snapshot.jar') {
		into '.'
		rename { 'OsmAndMapCreator.jar' }
		// rename 'OsmAndMapCreator-master-snapshot.jar' 'OsmAndMapCreator.jar'
	}
	
	from('lib-native') {
		into 'lib'
	}

	from(configurations.runtimeClasspath) {
		into 'lib'
	}

	from('fonts') {
		into 'fonts'
	}
	
	from('src/main/resources') {
		include '*.sh'
		include '*.bat'
		include 'batch.xml'
		include 'logging.properties'
	}

	archiveName 'OsmAndMapCreator.zip'
}

compileJava {
	dependsOn collectFonts, downloadCoreJni
}

dependencies {
	testImplementation group: 'junit', name: 'junit', version: '4.12'

	implementation project(':OsmAnd-java')
	implementation project(':OsmAndMapCreatorUtilities')

	implementation group: 'commons-logging', name: 'commons-logging', version: '1.2'
	implementation 'org.apache.commons:commons-compress:1.17'
	implementation 'net.sf.kxml:kxml2:2.1.8'
	implementation group: 'org.json', name: 'json', version: '20171018' 
	implementation group: 'net.sf.trove4j', name: 'trove4j', version: '3.0.3'
	implementation fileTree(dir: "lib-gl", include: ["*.jar"])

	implementation "org.jogamp.gluegen:gluegen-rt:2.3.1"
	implementation "org.jogamp.jogl:jogl-all:2.3.1"
	implementation 'com.google.code.gson:gson:2.8.9'
	// for manifest.mf
	implementation 'com.belerweb:pinyin4j:2.5.0'

	// implementation "org.jogamp.gluegen:gluegen-rt:2.3.1:natives-android-aarch64"
	// implementation "org.jogamp.gluegen:gluegen-rt:2.3.1:natives-android-armv6"
	implementation "org.jogamp.gluegen:gluegen-rt:2.3.1:natives-linux-amd64"
	implementation "org.jogamp.gluegen:gluegen-rt:2.3.1:natives-linux-armv6"
	// implementation "org.jogamp.gluegen:gluegen-rt:2.3.1:natives-linux-armv6hf"
	implementation "org.jogamp.gluegen:gluegen-rt:2.3.1:natives-linux-i586"
	implementation "org.jogamp.gluegen:gluegen-rt:2.3.1:natives-macosx-universal"
	implementation "org.jogamp.gluegen:gluegen-rt:2.3.1:natives-solaris-amd64"
	implementation "org.jogamp.gluegen:gluegen-rt:2.3.1:natives-solaris-i586"
	implementation "org.jogamp.gluegen:gluegen-rt:2.3.1:natives-windows-amd64"
	implementation "org.jogamp.gluegen:gluegen-rt:2.3.1:natives-windows-i586"

	// runtime "org.jogamp.jogl:jogl-all:2.3.1:natives-android-aarch64"
	// runtime "org.jogamp.jogl:jogl-all:2.3.1:natives-android-armv6"
	implementation "org.jogamp.jogl:jogl-all:2.3.1:natives-linux-amd64"
	implementation "org.jogamp.jogl:jogl-all:2.3.1:natives-linux-armv6"
	// runtime "org.jogamp.jogl:jogl-all:2.3.1:natives-linux-armv6hf"
	implementation "org.jogamp.jogl:jogl-all:2.3.1:natives-linux-i586"
	implementation "org.jogamp.jogl:jogl-all:2.3.1:natives-macosx-universal"
	implementation "org.jogamp.jogl:jogl-all:2.3.1:natives-solaris-amd64"
	implementation "org.jogamp.jogl:jogl-all:2.3.1:natives-solaris-i586"
	implementation "org.jogamp.jogl:jogl-all:2.3.1:natives-windows-amd64"
	implementation "org.jogamp.jogl:jogl-all:2.3.1:natives-windows-i586"
	testImplementation 'com.ibm.icu:icu4j:50.1'   
}
