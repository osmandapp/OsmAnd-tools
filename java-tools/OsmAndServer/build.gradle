buildscript {
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.6.14")
    }
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


task generateGitProperties {
    doLast {
        try {
            // def branch = 'git rev-parse --abbrev-ref HEAD'.execute().text.trim()
            // def revision = 'git rev-list --max-count 1 --timestamp HEAD'.execute().text.trim()
            // def commitHash = revision.split(' ').last()
            // def timestamp = revision ? new java.util.Date(java.util.concurrent.TimeUnit.SECONDS.toMillis(revision.split(' ').first() as long)).format("yyyy-MM-dd'T'HH:mm:ssZ") : null
            def commit = 'git log -1 --pretty=format:"%h%x09%an%x09%ad%x09%s"'.execute().text.trim()
            File propertiesFile = new File(project.getBuildDir(), '/resources/main/git.properties')
            if(commit) {
                propertiesFile.text = """git.commit.format=$commit"""
            }
        } catch (e) {
            project.logger.error('Unable to generate Git properties file.', e)
        }
    }
}

bootJar {
    dependsOn generateGitProperties
    launchScript()

    baseName = 'osmand-server-boot'
    version =  version
    mainClass = 'net.osmand.server.Application'
}


dependencies {
    // make optional for release run
    implementation "org.springframework.boot:spring-boot-devtools"
    
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-thymeleaf"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-data-redis"
    implementation "org.springframework.boot:spring-boot-starter-oauth2-client"
    implementation "org.javassist:javassist:3.25.0-GA"
    implementation "javax.xml.bind:jaxb-api:2.3.1"
    implementation "javax.activation:activation:1.1"
    implementation "org.glassfish.jaxb:jaxb-runtime:2.3.5"
    
    implementation 'com.sendgrid:sendgrid-java:4.2.1'
    implementation group: 'net.sf.trove4j', name: 'trove4j', version: '3.0.3'

    implementation "nl.basjes.parse.httpdlog:httpdlog-parser:5.1"

    implementation "org.telegram:telegrambots:5.7.1"

    implementation "org.springframework.security.oauth:spring-security-oauth2:2.2.2.RELEASE"
    implementation "org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.0.1.RELEASE"

    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation platform('com.amazonaws:aws-java-sdk-bom:1.11.1019')
    implementation 'com.amazonaws:aws-java-sdk-s3'
 //   implementation "org.springframework.cloud:spring-cloud-security:1.2.2.RELEASE"

    implementation "org.apache.commons:commons-collections4:4.1"
    implementation "com.j256.simplecsv:simplecsv:2.3"
    implementation "com.google.code.gson:gson:2.8.2"
    implementation "org.apache.commons:commons-math3:3.6.1"

    implementation 'org.apache.commons:commons-email:1.5'

	implementation 'com.vividsolutions:jts-core:1.14.0'	
	implementation 'commons-net:commons-net:3.9.0'
	

    // frontend
    implementation "org.webjars:jquery:3.3.1"
    implementation "org.webjars:bootstrap:3.3.7"
    implementation "org.webjars:vue:2.5.13"
    implementation "org.webjars:webjars-locator-core"


    implementation group: 'xmlpull', name: 'xmlpull', version: '1.1.3.1'
    implementation group: 'net.sf.kxml', name: 'kxml2', version: '2.3.0'

    implementation group: 'de.grundid.opendatalab', name: 'geojson-jackson', version: '1.0'

    implementation project(':OsmAnd-java')
    implementation project(':OsmAndMapCreatorUtilities')
    
    // potential conflict google oauth jetty & spring boot jetty / tomcat libs
    implementation (project(':OsmAndServerUtilities'));
//    implementation (project(':OsmAndServerUtilities')) {
//    	exclude group: 'com.google.oauth-client', module:'google-oauth-client-jetty'
//    }

	
	 
    implementation(group: 'com.google.apis', name: 'google-api-services-androidpublisher', version: 'v3-rev103-1.25.0') { 
        transitive = true 
    }

    testImplementation "junit:junit"
    testImplementation("org.springframework.boot:spring-boot-starter-test")

    testImplementation "com.github.tomakehurst:wiremock-standalone:2.18.0"
}
