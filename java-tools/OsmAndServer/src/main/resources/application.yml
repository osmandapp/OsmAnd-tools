google:
  client:
    clientId: ${GOOGLE_CLIENT_ID:521675454867-pmot5ink84bf4876advcmr16o0mgg8lk.apps.googleusercontent.com}
    clientSecret: ${GOOGLE_CLIENT_SECRET:bH3wvAogUIln12u-TR-E7IEV}
    accessTokenUri: https://www.googleapis.com/oauth2/v4/token
    userAuthorizationUri: https://accounts.google.com/o/oauth2/v2/auth
    clientAuthenticationScheme: form
    scope:
      - openid
      - email
  androidPublisher:
    clientSecret: ${ANDROID_PUBLISHER_CLIENT_SECRET_JSON:}
  resource:
    userInfoUri: https://www.googleapis.com/oauth2/v3/userinfo
    tokenInfoUri:
    preferTokenInfo: true


admin.emails: ${ADMIN_EMAILS:victor.shcherb@gmail.com}


# local storage to store files in db
storage:
  default: ${STORAGE_DEFAULT:local}
  datasource.s3:
      type: s3
      endpoint: ${STORAGE_S3_ENDPOINT_URL}
      region: ${STORAGE_S3_REGION}
      bucket: ${STORAGE_S3_BUCKET}
      accesskey: ${STORAGE_S3_ACCESS_KEY:}
      secretkey: ${STORAGE_S3_SECRET_KEY:}

logging:
  file: logs/server.log
  config: classpath:logback-spring.xml
  pattern.console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){yellow} %-5level [%thread]: %message%n%ex{4}"


server:
  port: 8080
  tomcat.max-threads: 5
  connection-timeout: 120000
  compression.enabled: true
  compression.min-response-size: 4096

night-builds-json.location: https://dl2.osmand.net/night-builds-json/
files.location: ${user.dir}/../../../help
gen.location: ${files.location}/gen
web.location: ${files.location}/website

management:
  endpoints:
    web:
      exposure:
        include: "*"
spring:
  servlet:
    multipart:
      max-file-size: ${SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE:15MB}
      max-request-size: ${SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE:15MB}
      enabled: true
  jpa:
    properties.hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
    properties.hibernate.jdbc.lob.non_contextual_creation: true
    hibernate.ddl-auto: update
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/changeset}
    username: ${DB_USER:test}
    password: ${DB_PWD:test}
  resources.static-locations: file:${web.location}
  thymeleaf:
    prefix: file:${web.location}/templates/
    cache: false

# classpath:/static/

mapillary.accesstoken: ${MAPILLARY_ACCESS_TOKEN:}

monitoring:
  enabled: ${ENABLE_MONITORING:false}

geoip.url: "http://localhost:8081/json/"

---
spring.jpa.hibernate.ddl-auto: validate

files.location: /var/www-download
gen.location: ${files.location}/gen
web.location: ${files.location}/website

logging:
  file: /var/log/osmand-server-logs/error.log
  config: classpath:logback-spring.xml

server:
  port: 8090
  tomcat.max-threads: 50
  servlet.session.timeout: 7d
  # session.timeout: 18000 #432000 #servlet.session.timeout
  address: 127.0.0.1 #keep it behind proxy
  tomcat:
    protocol_header: x-forwarded-proto
    remote_ip_header: x-forwarded-for
    accesslog:
      directory: /var/log/osmand-server-logs/
      enabled: true
      rotate: false
      pattern: '%h %l %u %t "%r" %s %b %D "%{Referer}i" "%{User-Agent}i"'

spring:
  profiles: production
  resources.static-locations: file:${web.location}
  thymeleaf.prefix: file:${web.location}/templates/
