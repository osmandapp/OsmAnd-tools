
admin.api-oauth2-url: https://api.github.com/orgs/osmandapp/teams/serveradmins

google.androidPublisher.clientSecret: ${ANDROID_PUBLISHER_CLIENT_SECRET_JSON:}

# local storage to store files in db
storage:
  default: ${STORAGE_DEFAULT:local}
  datasource.s3:
      type: s3
      endpoint: ${STORAGE_S3_ENDPOINT_URL}
      region: ${STORAGE_S3_REGION}
      bucket: ${STORAGE_S3_BUCKET}
      accesskey: ${STORAGE_S3_ACCESS_KEY:}
      secretkey: ${STORAGE_S3_SECRET_KEY:}

logging:
  file: logs/server.log
  config: classpath:logback-spring.xml
  purchase.debug: false
  pattern.console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){yellow} %-5level [%thread]: %message%n%ex{10}"


osmand:
  night-builds-json.location: https://dl2.osmand.net/night-builds-json/
  files.location: ${user.dir}/../../../help
  gen.location: ${osmand.files.location}/gen
  web.location: ${osmand.files.location}/website
  srtm.location: ${SRTM_LOCATION:}
  weather.tiff-location: ${WEATHER_TIFF_LOCATION:}
  weather.ecmwf-tiff-location: ${WEATHER_ECMWF_TIFF_LOCATION:}
  
server:
  port: 8080
  servlet.session:
    timeout: 7d
    cookie.secure: true
    cookie.same-site: none
    # store-dir: ${osmand.files.location}/session/
    # persistent: true
  tomcat.threads.max: 5
  connection-timeout: 120s
  compression.enabled: true
  compression.min-response-size: 4096

tile-server: 
  obf.location: ${OBF_LOCATION:}
  obf.ziplocation: ${OBF_LOCATION_ZIP:}
  metatile-size: 2048 # render tiles as 2048 x 2048
  style:
    df: style=default,tilesize=256 
    hd: style=default,tilesize=512
    topo: style=topo,tilesize=256
    topo-hd: style=topo,tilesize=512
    skimap: style=skimap,tilesize=256
    snowmobile: style=snowmobile,tilesize=256
    nautical: style=nautical,tilesize=256
    desert: style=desert,tilesize=256
    offroad: style=offroad,tilesize=256
    touring: style=Touring-view_(more-contrast-and-details),tilesize=256
  cache:
    location: ${TILE_SERVER_CACHE_LOCATION:tiles}
    max-zoom: 16 
  
management:
  endpoints:
    web:
      exposure:
        include: "*"
spring:
  servlet:
    multipart:
      max-file-size: ${SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE:50MB}
      max-request-size: ${SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE:50MB}
      enabled: true
  jpa:
    properties.hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
    properties.hibernate.jdbc.lob.non_contextual_creation: true
    hibernate.ddl-auto: update
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/changeset}
    username: ${DB_USER:test}
    password: ${DB_PWD:test}
  web.resources.static-locations: file:${osmand.web.location}
  thymeleaf:
    prefix: file:${osmand.web.location}/templates/
    cache: false
  security:
   oauth2:
     client:
       registration:
         github:
           clientId: ${GITHUB_CLIENT_ID:42f89eddbf81c54c518a}
           clientSecret: ${GITHUB_CLIENT_SECRET:180c2863aaabb15c7e779bb192c88f1a726507d5}
           scope: read:org,user:email
           # creds for localhost
  

# classpath:/static/

mapillary.accesstoken: ${MAPILLARY_ACCESS_TOKEN:}

monitoring:
  enabled: false
  changes.feed: 
  changes.publish.channel: 

geoip.url: "http://localhost:8081/json/"

---
spring.jpa.hibernate.ddl-auto: validate

osmand.files.location: /var/www-download

logging:
  file: /var/log/osmand-server-logs/error.log
  config: classpath:logback-spring.xml

server:
  port: 8090
  servlet.session.timeout: 7d
  # use-forward-headers: true
  forward-headers-strategy: native
  # session.timeout: 18000 #432000 #servlet.session.timeout
  address: 127.0.0.1 #keep it behind proxy
  tomcat:
    redirect-context-root: false
    threads.max: 50
    protocol_header: x-forwarded-proto
    remote_ip_header: x-forwarded-for
    accesslog:
      directory: /var/log/osmand-server-logs/
      enabled: true
      rotate: false
      pattern: '%h %l %u %t "%r" %s %b %D "%{Referer}i" "%{User-Agent}i"'

spring:
  profiles: production
  resources.static-locations: file:${osmand.web.location}
  thymeleaf.prefix: file:${osmand.web.location}/templates/
